version: '3'

services:
  backend:
    build: ./
    container_name: fusion_container
    working_dir: /fusionstyle
    ports:
      - 8010:8010
    command:
      - ./commands/start_server_${MODE}.sh
    volumes:
      - ./src:/fusionstyle/src
      - ./commands:/fusionstyle/commands
      - static_content:/fusionstyle/src/static
      - media_content:/fusionstyle/src/media
    env_file:
      - .env
    depends_on:
      - postgres

  postgres:
    image: postgres:12
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: on-failure
    env_file:
      - .env
    ports:
      - 5000:80
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  nginx:
    image: nginx:1.19
    volumes:
      - static_content:/fusionstyle/src/static
      - media_content:/fusionstyle/src/media
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    depends_on:
      - backend

#  mongodb:
#    image: mongo:3-stretch
#    container_name: mongo_db_container
#    command: [ "--bind_ip_all", "--smallfiles" ]
#    ports:
#      - 27017:27017
#    volumes:
#      - mongo_data:/data/db
#    env_file:
#      - .env
#    restart: on-failure
#
#  mongoadmin:
#    image: mongo-express
#    restart: on-failure
#    container_name: mongo_admin_container
#    ports:
#      - 8091:8081
#    env_file:
#      - .env
#    links:
#      - mongodb
#    depends_on:
#      - mongodb

volumes:
  static_content: { }
  media_content: { }
  pg_data: { }
  pgadmin_data: { }
#  mongo_data: { }